@model EmployeeDTO;
<html>
<head>

	<link href="https://cdn.jsdelivr.net/npm/sweetalert2@11.7.1/dist/sweetalert2.min.css" rel="stylesheet">
	<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11.7.1/dist/sweetalert2.min.js"></script>
	<script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
	<script type="text/javascript" charset="utf8" src="https://cdn.datatables.net/1.10.21/js/jquery.dataTables.min.js"></script>
	<link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/1.10.21/css/jquery.dataTables.min.css">
</head>
<body>
	<div class="containers">
		<button type="button" id="addEmployee" class="btn btn-primary">
			<i class="fas fa-plus"></i> Add Employee
		</button>
	</div>
	<br/>
	<br/>
	<div class="containers">
		<button type="button" id="veiwProjects" class="btn btn-danger">
			<i class="fas fa-plus"></i> Projects
		</button>
	</div>

	<br/>
	<table id="employeesTable" class="table table-striped">
		<thead>
			<tr>
				<th >Name</th>
				<th>Email</th>
				<th>Phone</th>
				<th>Department</th>
				<th>Actions</th>
			</tr>
		</thead>
	</table>
	<div class="modal fade" id="employeeModal" tabindex="-1" role="dialog" aria-labelledby="employeeModalLabel" aria-hidden="true">
		<div class="modal-dialog" role="document">
			<div class="modal-content">
				<div class="modal-header">
					<h5 class="modal-title" id="employeeModalLabel">Add Employee</h5>
				</div>
				<div class="modal-body">
					<form id="employeeForm" method="post" asp-controller="Employees" asp-action="AddOrEditEmployee">
						<div class="form-group">
							<label asp-for="Name" class="control-label"></label>
							<input asp-for="Name" class="form-control" />
							<span asp-validation-for="Name" class="text-danger"></span>
						</div>
						<div class="form-group">
							<label asp-for="PhoneNumber" class="control-label"></label>
							<input asp-for="PhoneNumber" class="form-control" />
							<span asp-validation-for="PhoneNumber" class="text-danger"></span>
						</div>
						<div class="form-group">
							<label asp-for="Department" class="control-label"></label>
							<input asp-for="Department" class="form-control" />
							<span asp-validation-for="Department" class="text-danger"></span>
						</div>
						<div class="form-group">
							<label asp-for="Email" class="control-label"></label>
							<input asp-for="Email" class="form-control" />
							<span asp-validation-for="Email" class="text-danger"></span>
						</div>
					</form>
				</div>
				<div class="modal-footer">
					<button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
					<button type="button" class="btn btn-primary" id="saveEmployee">Save Employee</button>
				</div>
			</div>
		</div>
	</div>
	<script>
		document.getElementById("veiwProjects").addEventListener("click", function () {
			window.location.href = '/Projects/Index';
		});
		// ------------------------------------------------------------  Func Data Table
		$('#employeesTable').DataTable({
			processing: true,
			serverSide: true,
			ajax: {
				url: '/Employees/GetEmployees',
				type: 'POST',
				dataType: 'json',
				data: function (d) {

					return {
						draw: d.draw,
						start: d.start,
						length: d.length,
						search: d.search.value
						// orderBy: d.columns[d.order[0].column].data,
						// ascending: d.order[0].dir === 'asc'
					};
				},
				dataSrc: function (json) {

					return json.data;
				}
			},
			columns: [
				{ data: 'name', className: 'editable', defaultContent: '', render: (data) => `<span data-column="name">${data}</span>` },
				{ data: 'email', className: 'editable', defaultContent: '', render: (data) => `<span data-column="email">${data}</span>` },
				{ data: 'phoneNumber', className: 'editable', defaultContent: '', render: (data) => `<span data-column="phoneNumber">${data}</span>` },
				{ data: 'department', className: 'editable', defaultContent: '', render: (data) => `<span data-column="department">${data}</span>` },
				{
					data: 'id',
					render: function (data, type, row) {
						return `
							<a href="javascript:void(0);" class="btn btn-sm btn-primary" id="edit-btn-${data}" onclick="editEmployee(${data})">Edit</a>
							<a href="javascript:void(0);" class="btn btn-sm btn-danger" onclick="deleteEmployee(${data})">Delete</a>
						`;
					},
					orderable: false
				}
			],
			rowCallback: function (row, data) {
				$(row).attr('data-id', data.id); 
			},
			paging: true,
			searching: true,
			ordering: true,
			pageLength: 10,
			language: {
				processing: "Processing...",
				lengthMenu: "Show _MENU_ entries",
				search: "Search:",
				info: "Showing _START_ to _END_ of _TOTAL_ entries",
				infoEmpty: "No entries to show",
				infoFiltered: "(filtered from _MAX_ total entries)"
			}
		});
		$('#employeesTable tbody').on('mouseenter', 'td.editable', function () {
			const cell = $(this);
			if (!cell.hasClass('editable')) {
				cell.addClass('editable');
			}
		});

		// ------------------------------------------------------------  Func Delete Employee
		function deleteEmployee(employeeId) {
			Swal.fire({
				title: 'Are you sure?',
				text: "You won't be able to revert this!",
				icon: 'warning',
				showCancelButton: true,
				confirmButtonColor: '#d33',
				cancelButtonColor: '#3085d6',
				confirmButtonText: 'Yes, delete it!'
			}).then(async (result) => {
				if (result.isConfirmed) {
					try {
						const response = await fetch(`/Employees/DeleteEmployee?id=${employeeId}`, {
							method: 'POST',
							headers: {
								'Content-Type': 'application/json'
							}
						});

						if (response.ok) {
							Swal.fire(
								'Deleted!',
								'The employee has been deleted.',
								'success'
							).then(() => {
								location.reload(true);
							});
						} else {
							Swal.fire(
								'Error!',
								'There was an issue deleting the employee.',
								'error'
							).then(() => {
								location.reload(true);
							});
						}
					} catch (error) {
						Swal.fire(
							'Error!',
							'There was an issue connecting to the server.',
							'error'
						);
					}
				}
			});
		}
		// ------------------------------------------------------------  Func Edit Employee
		function editEmployee(rowId) {
			const row = $(`#employeesTable tbody tr[data-id="${rowId}"]`);
			row.find('.editable').each(function () {
				const cell = $(this);
				const currentValue = cell.text();
				const columnName = cell.find('span').data('column'); 

				if (columnName) {
					cell.html(`<input type="text" class="form-control" data-column="${columnName}" value="${currentValue}" />`);
				}
			});

			const editButton = $(`#edit-btn-${rowId}`);
			editButton.replaceWith(`<a href="javascript:void(0);" class="btn btn-sm btn-success" id="confirm-btn-${rowId}" onclick="confirmEdit(${rowId})">Confirm</a>`);
		}


		function confirmEdit(rowId) {
			const row = $(`#employeesTable tbody tr[data-id="${rowId}"]`); 
			const updatedData = {};

			row.find('.editable').each(function () {
				const cell = $(this);
				const input = cell.find('input');
				if (input.length) {
					const newValue = input.val();
					const columnName = input.data('column'); 
					if (columnName) {
						updatedData[columnName] = newValue;
					}
					cell.html(newValue); 
				}
			});

			const confirmButton = $(`#confirm-btn-${rowId}`);
			confirmButton.replaceWith(
				`<a href="javascript:void(0);" class="btn btn-sm btn-primary" id="edit-btn-${rowId}" onclick="editEmployee(${rowId})">Edit</a>`
			);
			debugger;
		
			$.ajax({
				url: '/Employees/AddOrEditEmployee',
				method: 'POST',
				contentType: 'application/json',
				data: JSON.stringify({
					id: rowId,
					name: updatedData.name,
					email: updatedData.email,
					phoneNumber: updatedData.phoneNumber,
					department: updatedData.department
				}),
				success: function (response) {
					Swal.fire('Success!', 'Employee data has been updated.', 'success');
				},
				error: function () {
					Swal.fire('Error!', 'There was an issue updating the employee data.', 'error');
				}
			});
		}

	 //---------------------------------------------------- Partial <meta name="viewport" content="width=device-width" />
		// $(document).ready(function () {
			
	 	$('#addEmployee').on('click', function () {
				$('#employeeModal').modal('show');
		 	});

		$(document).ready(function () {
			$('#saveEmployee').on('click', function () {
				if ($('#employeeForm').valid()) {
					var employeeData = {
						Name: $('#employeeForm').find('[name="Name"]').val(),
						PhoneNumber: $('#employeeForm').find('[name="PhoneNumber"]').val(),
						Department: $('#employeeForm').find('[name="Department"]').val(),
						Email: $('#employeeForm').find('[name="Email"]').val()
					};

					$.ajax({
						url: '/Employees/AddOrEditEmployee',
						method: 'POST',
						contentType: 'application/json',
						data: JSON.stringify(employeeData),
						success: function (response) {
							$('#employeeModal').modal('hide');
							Swal.fire('Success!', 'Employee has been added.', 'success').then(() => {
								location.reload(true);
							});
						},
						error: function () {
							Swal.fire('Error!', 'There was an issue adding the employee.', 'error');
						}
					});
				}
			});
		});

		$(document).ready(function () {
	
			$('.btn-secondary').on('click', function () {
				$('#employeeModal').modal('hide'); 
			});
		});

	</script>
</body>
</html>




